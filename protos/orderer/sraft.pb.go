// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: protos/orderer/sraft.proto

package orderer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppendShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId      string                 `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	Entries       [][]byte               `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit  uint64                 `protobuf:"varint,4,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	ZoneId        string                 `protobuf:"bytes,5,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"` // For hierarchical leadership
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendShardRequest) Reset() {
	*x = AppendShardRequest{}
	mi := &file_protos_orderer_sraft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendShardRequest) ProtoMessage() {}

func (x *AppendShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_orderer_sraft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendShardRequest.ProtoReflect.Descriptor instead.
func (*AppendShardRequest) Descriptor() ([]byte, []int) {
	return file_protos_orderer_sraft_proto_rawDescGZIP(), []int{0}
}

func (x *AppendShardRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendShardRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *AppendShardRequest) GetEntries() [][]byte {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendShardRequest) GetLeaderCommit() uint64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

func (x *AppendShardRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

type AppendShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	LastIndex     uint64                 `protobuf:"varint,3,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendShardResponse) Reset() {
	*x = AppendShardResponse{}
	mi := &file_protos_orderer_sraft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendShardResponse) ProtoMessage() {}

func (x *AppendShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_orderer_sraft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendShardResponse.ProtoReflect.Descriptor instead.
func (*AppendShardResponse) Descriptor() ([]byte, []int) {
	return file_protos_orderer_sraft_proto_rawDescGZIP(), []int{1}
}

func (x *AppendShardResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendShardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendShardResponse) GetLastIndex() uint64 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

var File_protos_orderer_sraft_proto protoreflect.FileDescriptor

const file_protos_orderer_sraft_proto_rawDesc = "" +
	"\n" +
	"\x1aprotos/orderer/sraft.proto\x12\rorderer.sraft\"\x9d\x01\n" +
	"\x12AppendShardRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\tR\bleaderId\x12\x18\n" +
	"\aentries\x18\x03 \x03(\fR\aentries\x12#\n" +
	"\rleader_commit\x18\x04 \x01(\x04R\fleaderCommit\x12\x17\n" +
	"\azone_id\x18\x05 \x01(\tR\x06zoneId\"b\n" +
	"\x13AppendShardResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"last_index\x18\x03 \x01(\x04R\tlastIndex2]\n" +
	"\x05SRaft\x12T\n" +
	"\vAppendShard\x12!.orderer.sraft.AppendShardRequest\x1a\".orderer.sraft.AppendShardResponseB\x12Z\x10./protos/ordererb\x06proto3"

var (
	file_protos_orderer_sraft_proto_rawDescOnce sync.Once
	file_protos_orderer_sraft_proto_rawDescData []byte
)

func file_protos_orderer_sraft_proto_rawDescGZIP() []byte {
	file_protos_orderer_sraft_proto_rawDescOnce.Do(func() {
		file_protos_orderer_sraft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_orderer_sraft_proto_rawDesc), len(file_protos_orderer_sraft_proto_rawDesc)))
	})
	return file_protos_orderer_sraft_proto_rawDescData
}

var file_protos_orderer_sraft_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_protos_orderer_sraft_proto_goTypes = []any{
	(*AppendShardRequest)(nil),  // 0: orderer.sraft.AppendShardRequest
	(*AppendShardResponse)(nil), // 1: orderer.sraft.AppendShardResponse
}
var file_protos_orderer_sraft_proto_depIdxs = []int32{
	0, // 0: orderer.sraft.SRaft.AppendShard:input_type -> orderer.sraft.AppendShardRequest
	1, // 1: orderer.sraft.SRaft.AppendShard:output_type -> orderer.sraft.AppendShardResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_orderer_sraft_proto_init() }
func file_protos_orderer_sraft_proto_init() {
	if File_protos_orderer_sraft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_orderer_sraft_proto_rawDesc), len(file_protos_orderer_sraft_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_orderer_sraft_proto_goTypes,
		DependencyIndexes: file_protos_orderer_sraft_proto_depIdxs,
		MessageInfos:      file_protos_orderer_sraft_proto_msgTypes,
	}.Build()
	File_protos_orderer_sraft_proto = out.File
	file_protos_orderer_sraft_proto_goTypes = nil
	file_protos_orderer_sraft_proto_depIdxs = nil
}
